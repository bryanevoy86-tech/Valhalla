global:
  resolve_timeout: 5m

route:
  receiver: default
  group_by: ['alertname','path','slo_name','job_type']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  routes:
    - receiver: webhook_grafana
      continue: true
    - receiver: pagerduty
      matchers:
        - severity="critical"
      continue: true
    - receiver: slack
      matchers:
        - severity=~"warning|critical"
    - receiver: canary_guard
      matchers:
        - alertname=~"SLOAvailabilityBurnFast|LatencyAnomalySevere|HighErrorRate"
      continue: true

receivers:
  - name: default
  - name: webhook_grafana
    webhook_configs:
      - url: http://backend:8000/admin/alerts/grafana-annotate
        send_resolved: true
  - name: slack
    slack_configs:
      - api_url: ${AM_SLACK_WEBHOOK_URL}
        channel: ${AM_SLACK_CHANNEL}
        username: ${AM_SLACK_USERNAME}
        send_resolved: true
        title: >-
          [{{ .Status | toUpper }}] {{ .CommonLabels.alertname }} {{ if .CommonLabels.slo_name }}({{ .CommonLabels.slo_name }}){{ end }}
        text: >-
          *Status:* {{ .Status }}
          *Severity:* {{ .CommonLabels.severity | default "info" }}
          *Summary:* {{ .CommonAnnotations.summary | default .CommonAnnotations.description }}
          *Labels:* `{{ .CommonLabels }}`
          *StartsAt:* {{ .Alerts.Firing | first | default (index .Alerts 0) | .StartsAt }}
          {{ if .ExternalURL }}*Prometheus:* {{ .ExternalURL }}{{ end }}
          {{ if .SilenceURL }}*Silence:* {{ .SilenceURL }}{{ end }}
          {{ if .RunbookURL }}*Runbook:* {{ .RunbookURL }}{{ end }}

  - name: pagerduty
    pagerduty_configs:
      - routing_key: ${AM_PD_ROUTING_KEY}
        severity: '{{ .CommonLabels.severity | default "critical" }}'
        class: '{{ .CommonLabels.alertname }}'
        component: 'valhalla-backend'
        group: '{{ .CommonLabels.slo_name | default "service" }}'
        summary: '{{ .CommonAnnotations.summary | default .CommonAnnotations.description }}'
        details:
          labels: '{{ .CommonLabels }}'
          annotations: '{{ .CommonAnnotations }}'
        send_resolved: true
  - name: canary_guard
    webhook_configs:
      - url: http://backend:8000/admin/canary/guard?severe=true
        http_config:
          headers:
            X-Canary-Token: ${CANARY_WEBHOOK_TOKEN}
        send_resolved: false

templates:
  - /etc/alertmanager/*.tmpl

inhibit_rules:
  - source_match: { severity: critical }
    target_match: { severity: warning }
    equal: ["alertname","instance"]
